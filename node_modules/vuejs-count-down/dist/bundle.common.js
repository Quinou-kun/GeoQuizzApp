var CountDown = {render: function(){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"countdown"},[_vm._t("default",[_vm._v(_vm._s(_vm.seconds))])],2)},staticRenderFns: [],
    props: ['time', 'autoStart'],
    data: function data() {
        return {
            seconds: null,
        }
    },
    created: function created() {
        this.init();
        if (this.autoStart !== false)
            { this.start(); }

        // Events
        this.$on('stop', this.stop);
        this.$on('start', this.start);
        this.$on('restart', this.restart);
    },
    watch: {
        seconds: function seconds() {
            this.countDownProgress();
            if (this.seconds <= 0)
                { this.countDownFinished(); }
        }
    },
    methods: {
        init: function init() {
            this.seconds = this.time;
        },
        restart: function restart() {
            this.stop();
            this.init();
            this.start();
        },
        start: function start() {
            var this$1 = this;

            this.interval = setInterval(
                function () { return this$1.seconds--; }                
            , 1000);
        },
        stop: function stop() {
            clearInterval(this.interval);
        },
        countDownFinished: function countDownFinished() {
            this.stop();
            this.$emit('onFinish');
        },
        countDownProgress: function countDownProgress() {
            this.$emit('onProgress', this.seconds);
        }
    },
};

export default CountDown;
